#!/bin/bash 

PROGNAME=${0##*/}
TERMINAL="gnome-terminal -- zsh -c"
WINDOW_SIZES="--width=230 --height=200"
ICON="$HOME/.local/share/icons/docker.png"
ZENITY="zenity --list --hide-header --window-icon=$ICON"

usage()
{
cat <<EO
Usage: $PROGNAME [options]

Script utilit for Docker.

Options:
EO
cat <<EO | column -s\& -t
	-h,  --help  & shows this help
	-c,  --con   & start or join container
	-s,  --stop  & stop containers
	-up, --renew & resume containers
	-p,  --pause & pause containers
	-r,  --run   & run container
	-rc, --rmc   & delete container
	-ri, --rmi   & delete image
	-pu, --pull  & pull image
EO
}

case $1 in
	-h|--help)
	usage
	exit 0
		;;
	-r|--run)
LIST="`docker images --format "{{.Repository}}"`"
if ! [ -z $LIST ]; then
IMAGE=$($ZENITY --title "Create Docker Container" --text="Choose Docker image:" \
       --column "Docker Image" $WINDOW_SIZES $LIST) 
if [ $? -eq 0 -a -n $IMAGE ]; then
CONTNAME=`echo "$IMAGE" | sed 's|.*\/\(.*\)|\1|' | tr '-' '_'`
$TERMINAL "docker run -it --name $CONTNAME $IMAGE"
fi
else
zenity --error --text="No Docker Images" --no-wrap
fi
		;;
	-c|--con)
SHELL="`docker ps -a --format "{{.Command}}"`"	
LIST="`docker ps -a --format "{{.Names}}"`"
if ! [ -z $LIST ]; then
CONTAINER=$($ZENITY --title "Connect to container" --text="Choose a Docker Container:" \
           --column "Docker Container" $WINDOW_SIZES $LIST)
if [ $? -eq 0 -a -n $CONTAINER ]; then
STATUS="`docker inspect $CONTAINER --format "{{.State.Status}}"`"
if [ "$STATUS" = "running" ]; then $TERMINAL "docker exec -it $CONTAINER $SHELL"; fi
if [ "$STATUS" = "exited" ]; then $TERMINAL "docker start -ai $CONTAINER"; fi
fi
else
zenity --error --text="No Docker Containers" --no-wrap
fi
		;;
	-s|--stop)	
LIST="`docker ps -a -f status=running --format "{{.Names}}"`"
if ! [ -z $LIST ]; then
CONTAINER=$($ZENITY --title "Stop container" --text="Choose a Docker Container:" \
           --column "Docker Container" --multiple --separator="#" $WINDOW_SIZES $LIST)
if [ $? -eq 0 -a -n $CONTAINER ]; then
CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
exec docker stop $CONTAINER
fi
else
zenity --error --text="No containers running" --no-wrap
fi
		;;	
	-p|--pause)	
LIST="`docker ps -a -f status=running --format "{{.Names}}"`"
if ! [ -z $LIST ]; then
CONTAINER=$($ZENITY --title "Pause container" --text="Choose a Docker Container:" \
           --column "Docker Container" --multiple --separator="#" $WINDOW_SIZES $LIST)
if [ $? -eq 0 -a -n $CONTAINER ]; then
CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
exec docker pause $CONTAINER
fi
else
zenity --error --text="No containers running" --no-wrap
fi
		;;	
	-up|--renew)	
LIST="`docker ps -a -f status=paused --format "{{.Names}}"`"
if ! [ -z $LIST ]; then
CONTAINER=$($ZENITY --title "Resume containers" --text="Choose a Docker Container:" \
           --column "Docker Container" --multiple --separator="#" $WINDOW_SIZES $LIST)
if [ $? -eq 0 -a -n $CONTAINER ]; then
CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
exec docker unpause $CONTAINER
fi
else
zenity --error --text="No pause containers" --no-wrap
fi
		;;							
	-rc|--rmc)
LIST="`docker ps -a --format "{{.Names}}"`"
if ! [ -z $LIST ]; then
CONTAINER=$($ZENITY --title "Remove Docker Container" --text="Choose a Docker Container:" \
           --column "Docker Container" --multiple --separator="#" $WINDOW_SIZES $LIST)
if [ $? -eq 0 -a -n $CONTAINER ]; then
CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
exec docker rm --force $CONTAINER
fi
else
zenity --error --text="No Docker Containers" --no-wrap
fi
		;;
	-ri|--rmi)
LIST="`docker images --format "{{.Repository}}"`"
if ! [ -z $LIST ]; then
IMAGE=$($ZENITY --title "Delete Docker image" --text="Choose Docker image:" \
       --column "Docker Image" --multiple --separator="#" $WINDOW_SIZES $LIST) 
if [ $? -eq 0 -a -n $IMAGE ]; then
IMAGE=`echo "$IMAGE" | tr '#' ' '`
exec docker rmi $IMAGE
fi
else
zenity --error --text="No Docker Images" --no-wrap
fi
		;;
	-pu|--pull)
IMAGE=$(zenity --entry --title "Install Docker image" --text="Docker image:" \
       --entry-text="" --window-icon=$ICON --width=230 --height=80) 
if [ $? -eq 0 -a -n $IMAGE ]; then
exec docker pull $IMAGE
fi
		;;
	*)
UTIL=$($ZENITY --hide-column=1 --title="Docker utilities" --text="Select utility:" \
      --column="Command" --column="Utility" --width=230 --height=288 \
      "$PROGNAME --con" "	Connect" \
      "$PROGNAME --stop" "	Stop" \
      "$PROGNAME --renew" "	Resume" \
      "$PROGNAME --pause" "	Suspend" \
      "$PROGNAME --run" "	Create container" \
      "$PROGNAME --rmc" "	Remove container" \
      "$PROGNAME --rmi" "	Delete image" \
      "$PROGNAME --pull" "	Install image")
exec $UTIL
		;;		
esac
shift
