#!/bin/bash 

PROGNAME=${0##*/}
DOCKER="$(which docker)"
TERMINAL="gnome-terminal -- zsh -c"
ICON="$HOME/.local/share/icons/docker.png"
NAME="--class=$PROGNAME --name=$PROGNAME"
ZENITY="zenity $NAME --list --hide-header --window-icon=$ICON --width=250 --height=288"
ZENITY_OUT="zenity $NAME --text-info --window-icon=$ICON --no-wrap --width=980 --height=600"
ZENITY_ENTRY="zenity $NAME --entry --window-icon=$ICON --width=280 --height=80"
ZENITY_RUN="zenity $NAME --progress --pulsate --no-cancel --auto-close --window-icon=$ICON"
ZENITY_INFO="zenity $NAME --info --no-wrap --window-icon=$ICON"
OUTPUT="/tmp/$(basename "$0").$$"

usage()
{
cat <<EO
Usage: $PROGNAME [options]

Script utilit for Docker.

Options:
EO
cat <<EO | column -s\& -t
	-h,  --help  & shows this help
	-c,  --con   & start or join container
	-s,  --stop  & stop containers
	-up, --renew & resume containers
	-p,  --pause & pause containers
	-r,  --run   & run container
	-rc, --rmc   & delete container
	-ri, --rmi   & delete image
	-pu, --pull  & pull image
	-i,  --img   & installed images		
EO
}

main()
{
UTIL=$($ZENITY --hide-column=1 --width=230 --height=314 \
      --title="Docker Utilities" --text="Select Utility:" \
      --column="Command" --column="Utility" \
      "$PROGNAME --con" "	Connect" \
      "$PROGNAME --stop" "	Stop" \
      "$PROGNAME --renew" "	Resume" \
      "$PROGNAME --pause" "	Suspend" \
      "$PROGNAME --run" "	Create container" \
      "$PROGNAME --rmc" "	Remove container" \
      "$PROGNAME --rmi" "	Delete image" \
      "$PROGNAME --pull" "	Install image"
      "$PROGNAME --img" "	Installed Images")     
exec $UTIL
}

while true; do
	case $1 in
		-h|--help)
			usage
			exit 0
			;;
		-i|--img)
			if ! [ -z "`docker images`" ]; then
			$DOCKER images | tee >$OUTPUT 
			if [ -s $OUTPUT ]; then 
            $ZENITY_OUT --filename=$OUTPUT --title "Installed Images" \
            --font="DejaVu Sans Mono"
            fi
            rm -f $OUTPUT			
			else
			$ZENITY_INFO --text="No Images"
			fi
			;;			
		-r|--run)
			LISTIMAGE="`docker images --format "{{.Repository}}"`"
			CONTAINER="`docker ps -a --format "{{.Image}}"`"
			LIST=`echo -e "$LISTIMAGE\n$CONTAINER" | sort | uniq -u`  
			if ! [ -z $LISTIMAGE ]; then
			if ! [ -z $LIST ]; then
			IMAGE=$($ZENITY --title "Create ContainerÑ€" --text="Choose an Image:" \
				   --column "Docker Image" $LIST)       
			if [ $? -eq 0 -a -n $IMAGE ]; then
			CONTNAME=`echo "$IMAGE" | sed 's|.*\/\(.*\)|\1|' | tr '-' '_'`
			$TERMINAL "docker run -it --name $CONTNAME $IMAGE"
			fi
			else
			$ZENITY_INFO --text="All Images are running"
			fi
			else
			$ZENITY_INFO --text="No Images"
			fi
			;;
		-c|--con)
			LIST_ALL="`docker ps -a --format "{{.Names}}"`"		
			SHELL="`docker ps -a -f status=running -f status=exited --format "{{.Command}}"`"	
			LIST="`docker ps -a -f status=running -f status=exited --format "{{.Names}}"`"
			if ! [ -z $LIST_ALL ]; then
			if ! [ -z $LIST ]; then
			CONTAINER=$($ZENITY --title "Connect to Container" --text="Choose a Container:" \
					   --column "Docker Container" $LIST)          
			if [ $? -eq 0 -a -n $CONTAINER ]; then
			STATUS="`docker inspect $CONTAINER --format "{{.State.Status}}"`"
			if [ "$STATUS" = "running" ]; then $TERMINAL "docker exec -it $CONTAINER $SHELL"; fi
			if [ "$STATUS" = "exited" ]; then $TERMINAL "docker start -ai $CONTAINER"; fi
			fi
			else
			$ZENITY_INFO --text="All containers are suspended"
			fi
			else
			$ZENITY_INFO --text="No containers"
			fi
			;;
		-s|--stop)
			LIST_ALL="`docker ps -a --format "{{.Names}}"`"		
			LIST="`docker ps -a -f status=running --format "{{.Names}}"`"
			if ! [ -z $LIST_ALL ]; then
			if ! [ -z $LIST ]; then
			CONTAINER=$($ZENITY --title "Stop Container" --text="Choose a Container:" \
					   --column "Docker Container" --multiple --separator="#" $LIST)          
			if [ $? -eq 0 -a -n $CONTAINER ]; then
			CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
			(stdbuf -oL $DOCKER stop $CONTAINER) | $ZENITY_RUN \
			 --title="Stopping" --text="Containers"
			fi
			else
			$ZENITY_INFO --text="No containers running or everything is paused"
			fi
			else
			$ZENITY_INFO --text="No containers"
			fi
			;;	
		-p|--pause)	
			LIST_ALL="`docker ps -a --format "{{.Names}}"`"		
			LIST="`docker ps -a -f status=running --format "{{.Names}}"`"
			if ! [ -z $LIST_ALL ]; then
			if ! [ -z $LIST ]; then
			CONTAINER=$($ZENITY --title "Pause Container" --text="Choose a Container:" \
					   --column "Docker Container" --multiple --separator="#" $LIST)         
			if [ $? -eq 0 -a -n $CONTAINER ]; then
			CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
			$DOCKER pause $CONTAINER
			fi
			else
			$ZENITY_INFO --text="No containers running or everything is paused"
			fi
			else
			$ZENITY_INFO --text="No containers"
			fi
			;;	
		-up|--renew)
			LIST_ALL="`docker ps -a --format "{{.Names}}"`"			
			LIST="`docker ps -a -f status=paused --format "{{.Names}}"`"
			if ! [ -z $LIST_ALL ]; then
			if ! [ -z $LIST ]; then
			CONTAINER=$($ZENITY --title "Resume Containers" --text="Choose a Container:" \
					   --column "Docker Container" --multiple --separator="#" $LIST)          
			if [ $? -eq 0 -a -n $CONTAINER ]; then
			CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
			$DOCKER unpause $CONTAINER
			fi
			else
			$ZENITY_INFO --text="No containers suspended"
			fi
			else
			$ZENITY_INFO --text="No containers"
			fi
			;;							
		-rc|--rmc)
			LIST="`docker ps -a --format "{{.Names}}"`"
			if ! [ -z $LIST ]; then
			CONTAINER=$($ZENITY --title "Remove Container" --text="Choose a Container:" \
					   --column "Docker Container" --multiple --separator="#" $LIST)           
			if [ $? -eq 0 -a -n $CONTAINER ]; then
			CONTAINER=`echo "$CONTAINER" | tr '#' ' '`
			$DOCKER rm --force $CONTAINER
			fi
			else
			$ZENITY_INFO --text="No containers"
			fi
			;;
		-ri|--rmi)
			LIST="`docker images --format "{{.ID}}: {{.Repository}}"`"
			if ! [ -z $LIST ]; then
			IMAGE=$($ZENITY --hide-column=1 --title "Delete Image" --text="Choose a Image:" \
				   --column "Image ID" --column "Docker Image" --multiple --separator="#" $LIST)       
			if [ $? -eq 0 -a -n $IMAGE ]; then
			IMAGE=`echo "$IMAGE" | tr '#' ' ' | tr ':' ' '`
			(stdbuf -oL $DOCKER rmi -f $IMAGE) | $ZENITY_RUN \
			 --title="Deleting" --text="Images"
			fi
			else
			$ZENITY_INFO --text="No Images"
			fi
			;;
		-pu|--pull)
			IMAGE=$($ZENITY_ENTRY --title "Install Image" --text="Docker Image:" \
			       --entry-text="") 
			if [ $? -eq 0 -a -n $IMAGE ]; then
			($DOCKER pull $IMAGE | stdbuf -oL tee >$OUTPUT) | $ZENITY_RUN \
			 --title="Installing Image" --text="Installing: $IMAGE"
			if [ -s $OUTPUT ]; then 
            $ZENITY_OUT --filename=$OUTPUT --title "Image Installation Report: $IMAGE"
            fi
            rm -f $OUTPUT
			fi
			;;
		*)
			shift
			break
			;;				
	esac
	shift
done

main     
